{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-06-22T01:16:44.231434+00:00",
  "repo": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOKszxDc54CeKV",
      "title": "Turning off DTLS replay protection is typically a major security problem",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/2",
      "state": "CLOSED",
      "author": "emanjon",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "emanjon"
      ],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/tls/f990CfKIRDQKTa4tAkIrgHcKqWc/\r\n\r\n---------------------------\r\n\r\nHi,\r\n\r\nReading RFC 9147 (DTLS 1.3) I cannot find any other interpretation than that replay protection may be disabled for all records. This is not a problem for the initial lock-step handshake, alerts, KeyUpdate, and ACKs. It seems to be a major problem for NewSessionTicket, NewConnectionId, RequestConnectionId, and Post-handshake client authentication as the lack of replay protection might significantly affect availability. It seems to me that DTLS 1.3 forgot to update replay protection based on the new post-handshake messages. Let me know if I miss something.\r\n\r\nIt is a bit surprising that DTLS 1.3 published in 2022 allows the application to turn off replay protection at all. This very far from current best practice for security protocols. There are very good reasons why Datagram QUIC mandates replay protection and why TLS 1.3 has several pages discussing security considerations for 0-RTT data, which lacks replay protection. In general, turning off replay protection (even just for application data) might lead to loss of confidentiality, integrity, and availability, i.e., the whole CIA triad.\r\n\r\nApplications cannot be expected to understand the severe consequences of not having replay protection or understand how to fix it on the application layer. I also don't see any need for turning off replay protection except RFC 6083 which is a bit of a special case, and which turned out to have replay issues.\r\nhttps://datatracker.ietf.org/meeting/115/materials/slides-115-tsvwg-sctp-auth-security-issues-00\r\n\r\nI would strongly recommend all DTLS 1.3 libraries to completely remove the option to disable replay protection.\r\n\r\nAn easy fix for the post-handshake messages is to \"clarify\" that replay protection must not be turned off for anything else than application data. I you agree I can submit an \u201cerratum\u201d for RFC 9147. But this does not solve the general issue that turning off replay protection would be a major security problem in almost all applications.\r\n\r\nCheers,\r\nJohn Preu\u00df Mattsson\r\n",
      "createdAt": "2023-11-28T08:32:30Z",
      "updatedAt": "2024-06-20T09:51:34Z",
      "closedAt": "2024-06-20T09:51:34Z",
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "COLLABORATOR",
          "body": "I am very sceptical to the option to turn of the DTLS replay protection. Is this needed for anything? I would recommend removing it. Otherwise a lot of analysis and considerations are likely needed.",
          "createdAt": "2023-11-28T08:35:47Z",
          "updatedAt": "2023-11-28T08:35:47Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOKszxDc57gLRq",
      "title": "PVALID needs to define how it is reliability mechanism works",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/3",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-09T10:01:45Z",
      "updatedAt": "2024-07-08T16:03:58Z",
      "closedAt": "2024-07-08T16:03:58Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Has been added, using RTO based retransmission. ",
          "createdAt": "2024-07-08T16:03:58Z",
          "updatedAt": "2024-07-08T16:03:58Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOKszxDc57x9Yj",
      "title": "Split DTLS Options Identifier space info safe to ignore, ignore and report, fail types. ",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/5",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "The DTLS options in the parameter is not split into categories where one can define them as being possible to ignore or need to be understood. That should be done by splitting the spaces based on the higher bits like for other SCTP code points.",
      "createdAt": "2024-01-11T13:43:30Z",
      "updatedAt": "2024-07-08T16:03:38Z",
      "closedAt": "2024-07-08T16:03:38Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "The DTLS options have been removed to no longer relevant. ",
          "createdAt": "2024-07-08T16:03:38Z",
          "updatedAt": "2024-07-08T16:03:38Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOKszxDc6GfDZj",
      "title": "Update PPID registration",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/6",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This draft has gotten a PPID assigned:\r\n4242    DTLS Chunk Key-Management Messages      [draft-westerlund-tsvwg-sctp-dtls-chunk-01]\r\n\r\nNeed to update the draft.",
      "createdAt": "2024-04-22T11:25:33Z",
      "updatedAt": "2024-07-08T16:03:11Z",
      "closedAt": "2024-07-08T16:03:11Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Has been accomplished. ",
          "createdAt": "2024-07-08T16:03:11Z",
          "updatedAt": "2024-07-08T16:03:11Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOKszxDc6O0I60",
      "title": "Are there benefits to encrypt PPID 4242 when possible",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/7",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "teiclap"
      ],
      "labels": [],
      "body": "As currently defined the DTLS Keymanagement messages in Data chunk with PPID=4242 will always be sent unencrypted. This is simple and avoids error cases if keys expires or are removed for the DTLS Chunk. However, are there any security benefits to encrypting them when one can? It will make targeted attacks against the key-managment harder for established associations, the the actual message itself is protected, but identifiable. However, one can never prevent denial in general through packet dropping. Also it makes the key-management sensitive to synchronization issues in case of failures or key-limit expiration requiring fallback behaviors. \r\n\r\nSo the main question is if extra complexities to have different choices and fallback handling is worth the potential limited benefit of encrypting. ",
      "createdAt": "2024-07-08T16:09:42Z",
      "updatedAt": "2024-10-04T07:47:54Z",
      "closedAt": "2024-10-04T07:47:54Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Allowing unprotected packets with DATA chunks actually create one significant weakness. It allows attackers capable of injecting packets to attempt to impact the DATA chunk tracking process, inject overlapping DATA chunks with protected and impact the content of the SACK block. Thus, it is likely simplest to always require using protected packets. If there would be a serious issue with keys, one can perform a SCTP association restart using the restart DTLS session context. This is disruptive, but the failure case to not have a valid key are also fairly major and should not be happening in associations. ",
          "createdAt": "2024-08-30T08:46:36Z",
          "updatedAt": "2024-08-30T08:46:36Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Authors have decided to not allow plain text data. Need text change. ",
          "createdAt": "2024-09-10T12:46:04Z",
          "updatedAt": "2024-09-10T12:46:04Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "By requiring to allways use DTLS Chunk after reaching PROTECTED state this issue have been resolved.",
          "createdAt": "2024-10-04T07:47:54Z",
          "updatedAt": "2024-10-04T07:47:54Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOKszxDc6O0Jxe",
      "title": "Does the API need a: Set Q limit call?",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/8",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "emanjon"
      ],
      "labels": [],
      "body": "Does the API need an call for setting the invocation limit (Q) on R,DCI, epoch to prevent over usage of key?",
      "createdAt": "2024-07-08T16:11:17Z",
      "updatedAt": "2024-10-10T08:31:22Z",
      "closedAt": "2024-10-10T08:31:22Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Follow TLS here, we don't need a strict limit. It is sufficient to check if the limit is passed, and this can be implememted by periodic polling, or a callback. Suggestion to clarify that there are alternative implementation in the draft. Lets reveiw and improvet text on limits.",
          "createdAt": "2024-09-10T12:56:10Z",
          "updatedAt": "2024-09-10T12:56:10Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOKszxDc6O0K7_",
      "title": "Clarify privacy properties impact",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/9",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "emanjon"
      ],
      "labels": [],
      "body": "\"Using a security protocol in the SCTP DTLS chunk might lower the privacy properties of the security protocol as the SCTP Verification Tag is an unique identifier for the association.\"\r\n\r\nThis text is unclear on what impact is referred to. \r\n",
      "createdAt": "2024-07-08T16:13:28Z",
      "updatedAt": "2024-10-10T09:03:59Z",
      "closedAt": "2024-10-10T09:03:59Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Clarify this from DTLS perspective. The SCTP association will anyway be identifiable based on 5-tuple where destination IP and port and fixed for an assocation per direction. ",
          "createdAt": "2024-09-10T13:01:20Z",
          "updatedAt": "2024-09-10T13:01:20Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOKszxDc6TibbW",
      "title": "Clarify the case when Endpoints allow reverting to rfc6083",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/10",
      "state": "CLOSED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It is possible that the Endpoint wants to advertise the peer that it can handle rfc6083 in INIT by using the set of INIT parameters specified in rfc6083, together with the DTLS-CHUNK.\r\nIn case the peer cannot handle DTLS-CHUNK, the Association would be set using DTLS/SCTP according to rfc6083.\r\nSince rfc6083 has known packet size limitations and security weaknesses, we need to explain that the combination of rfc6083 as revert solution for DTLS-CHUNK is not viable and that such combination should no be accepted in any case.",
      "createdAt": "2024-08-20T10:22:00Z",
      "updatedAt": "2024-10-04T08:23:03Z",
      "closedAt": "2024-10-04T08:23:03Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "I think we need to clarify the process of using PVALID and when to send the error. So for example if the client offers DTLS chunk and DTLS/SCTP and the server only knows DTLS Chunk, is that a PVALID error. Or is it only if there are missing security solutions it does recognize? \r\n\r\nIn addition I think the handling of other solutions needs to be written into a procedure or new section, rather than just the security considerations on downgrade. ",
          "createdAt": "2024-09-06T08:44:33Z",
          "updatedAt": "2024-09-06T08:44:33Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Text has been added to address this issue. ",
          "createdAt": "2024-10-04T08:23:03Z",
          "updatedAt": "2024-10-04T08:23:03Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOKszxDc6Uzyy3",
      "title": "Avoiding deadlock in Initial key-establishment",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/11",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "During implementation we realized we have a potential for a deadlock in the key establishment process. This would occur if the DTLS server configures and starts using the first DCI as soon as possible. With Diffie-Hellman key-exchange the client can first generate the full set of keying material when it has received the servers ServerHello message. This being delivered using unprotected DATA chunks using PPID=4242 requires that the server are certain that this has been delivered to the client before the server starts transmitting and requiring any incoming packets to be protected. \r\n\r\nTo simplify for the server's state handling an initial proposal to deal with this is the below. So when the server has gotten far along the process to have keys, it will install the created DCI. However, it will not use it for outgoing nor require it to be used, i.e. still accept unprotected traffic. It falls on the client to not enter the Validation state and start that process until it is certain that it self and the server have the DCI in place. The server will when receiving the protected PVALID chunk move to Protected and at that stage use protected traffic going forward. \r\n\r\n```\r\n     +---------------+\r\n     |  ESTABLISHED  |\r\n     +-------+-------+\r\n             |\r\n             | If INIT/INIT-ACK has DTLS 1.3 Chunk\r\n             | Protected Association Parameter\r\n             v\r\n+--------------------------+\r\n| PROTECTION INITILIZATION |\r\n+------------+-------------+\r\n             |\r\n             | start T-valid timer.\r\n             |\r\n             | [DTLS SETUP]\r\n             |-----------------\r\n             | send and receive\r\n             | DTLS handshake\r\n             v\r\n +----------------------+\r\n |  VALIDATION INIT     |\r\n +-----------+----------+\r\n             | Client and Server: Init DCI, Don't use it for transmission\r\n\t     | \r\n\t     | Client: Go to next state\r\n\t     | Server: Wait for Protected PVALID from Client\r\n             V\r\n +----------------------+\r\n |      VALIDATION      |\r\n +-----------+----------+\r\n             | \r\n             | [ENDPOINT VALIDATION]\r\n             | Require use of DTLS Chunk    \r\n             |------------------------\r\n             | send and receive\r\n             | PVALID by means of\r\n             | DTLS chunk.\r\n             v\r\n     +---------------+\r\n     |   PROTECTED   | \r\n     +---------------+\r\n ```",
      "createdAt": "2024-08-30T08:41:03Z",
      "updatedAt": "2024-10-04T08:22:25Z",
      "closedAt": "2024-10-04T08:22:25Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "The procedure have been clarified to avoid deadlock, especially the need for accepting plain text chunks during validation to ensure ",
          "createdAt": "2024-10-04T08:22:25Z",
          "updatedAt": "2024-10-04T08:22:25Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOKszxDc6Vl3j1",
      "title": "PVALID retransmission optimisation",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/12",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "gloinul"
      ],
      "labels": [],
      "body": "So when the client role sends the PVALID it will retransmit after one RTO. However, if the clients PVALID reached the server and it was the response PVALID that was lost, the client may receive additional SCTP packets with DTLS protected chunks. This indicate to the client that a likely loss of the server-> client PVALID chunk. The caveat is network reordering, thus a short delay could prevent unnecessary retransmissions. However, I don't see an issue with triggering one retransmission immediately, and restart the RTO timer. The whole goal of this is speeding up the time until the association on both sides reaches PROTECTED state.",
      "createdAt": "2024-09-06T07:32:50Z",
      "updatedAt": "2024-10-04T07:54:49Z",
      "closedAt": "2024-10-04T07:54:49Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "We need to add also that initiator should drop received DATA Chunks that are not PPID=4242 until PVALID response have been received. \r\n ",
          "createdAt": "2024-09-10T13:13:46Z",
          "updatedAt": "2024-09-10T13:13:46Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "This issue have been resolved with clarification per PR #13 on immediate retransmission. ",
          "createdAt": "2024-10-04T07:54:49Z",
          "updatedAt": "2024-10-04T07:54:49Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOKszxDc6cvCDK",
      "title": "IANA early review noted that there are no upper limit in regestry definition",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/19",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "IANA did an early review and commented:\r\n\r\nIn Section 10.2, what\u2019s the upper numeric boundary (e.g., 31) for the \u201cbit position\u201d field?\r\n\r\nThis should be clarified as we allow for multiple 32-bit words. So the limit are likely the maximum of words in a parameter. ",
      "createdAt": "2024-11-01T17:53:54Z",
      "updatedAt": "2025-06-12T13:38:47Z",
      "closedAt": "2025-06-12T13:38:47Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "A limit has been implemented. ",
          "createdAt": "2025-06-12T13:38:47Z",
          "updatedAt": "2025-06-12T13:38:47Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOKszxDc64MTMy",
      "title": "DT : Replace PVALID with a Data Chunk and a new PPID",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/22",
      "state": "OPEN",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tuexen",
        "gloinul"
      ],
      "labels": [],
      "body": "From the Design Team : the PVALID chunk is not a preferred solution, it shall be replaced by using a legacy DATA Chunk having a new PPID.",
      "createdAt": "2025-05-26T06:58:06Z",
      "updatedAt": "2025-06-13T08:59:10Z",
      "closedAt": null,
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "@teiclap and I tried to implement the design team direction of attempting to move the downgrade attack prevention that PVALID Chunk was supporting to the security function running in user space above an SCTP stack. We have run into issues which we think are the result of not fully thinking through this direction and would like to discuss it further.\n \nThe main goal of the PVALID mechanism is ensure that all that was negotiated in clear text was all that the sender of the respective side actually offered so no downgrades occurred at this step INIT/INIT-ACK. To be able to do that both sides needs to accurately represent all that was offered when it comes to security parameters and compare that to all that was received on the peer side. The PVALID mechanism need to carry the relevant information of both what was offered and what was received. I think it is here that we didn\u2019t think this through properly what the implications of this is when trying to do this from the user land level. \n \nThe user land process initiating an SCTP association needs to configure the SCTP stack with which security related options it wants to offer. This will result in one or more security related parameter will be included. So here I would note that we existing parameters are DTLS Chunk (with key-management indicators) and possibly also SCTP-AUTH with the chunks/all chunks, random, HMAC Algo. These offered parameters needs to be either parameterized and included in the cookie, or simply the whole set of relevant parameters included in cookie and then encrypted. \n \nThe responder sends back the INIT-ACK with parameter response for what it accepts to use and relevant parameter values. The Init-ACK also contains the state cookie containing the offered info as well as it\u2019s own response of information. As the responder want to remain stateless for this first Init/Init-ACK procedure nothing is stored locally or given to the upper layer. \n \nThe Initiator receives the INIT-ACK and verifies that the SCTP Association and configured security parameters is viable and stores either the parameters or a representation of what it received. Then it sends the Cookie ECHO back to the responder side. Here the information from the  INIT/INIT-ACK could be provided to key-management but it likely makes sense to wait until 5 when the SCTP association enters established.\n \nThe responder side receives the Cookie-ECHO and unpacks the cookie and creates the SCTP Association state and stores the security parameters. On the responder side the SCTP association is now in established state. However, the key-management step is so far not initiated by the responder but by the initiator. The responder sends the Cookie-ACK. Here is the earlies the responder side could provide the relevant information from the INIT and INIT-ACK to the key management.\n \nThe initiator is receiving the Cookie-ACK and goes into established state. As the SCTP Association establishment succeeded the key-management mechanism can be triggered. It will send its DTLS Client Hello. \n \nThe responder receives the DTLS client hell and gives it to the key-management function. Generates the DTLS Server hello and sends that back. At this point it can install DTLS Chunk receive keys, and send keys, but can\u2019t activate them until it has confirmed that the Server Hello has reached the DTLS Client. So technically this could be based on SCTP SACKs, but I think that is complex when it comes to the API function. Thus, one could initiate PVALID here and send an encrypted DTLS Chunk with a PVALID message, thus potentially mixing encrypted and unencrypted SCTP packets, however any retransmission of the Server Hello must be sent unencrypted.\n \nThe initiator receives the Server Hello and can now install both receiver keys and send keys. It now sends the DTLS Client ACK to conclude the DTLS handshake. This can be sent encrypted to my understanding. The initiator side can after having sent this initiate PVALID mechanism. \n \nThe responder receives the DTLS Client ACK (encrypted) and can also verify conclusion of DTLS handshake and also move to send only encrypted at this point. At this stage it can definitely run PVALID process. \n \nLets, now look at what information is needed to perform the PVALID mechanism. For the initiator to generate a PVALID message it needs to have the actual parameter set or a representation of that stored in the key-management user land protocol. Which means that it either can determine what would be sent based on the configuration, or need have an API function to query the SCTP stack to get what was included in the INIT. Then it could send its PVALID message with this information to the responder.\n \nThe responder when receiving the PVALID message needs to compare the included information with was actually received in the INIT message. However, due to the statelessness, it will get this from the Cookie-Echo (4) and thus needs an API function here to extract this information. I will also note that we need to handle the situation that the responder might not know all the parameters that was offered. Thus, it lacks implementation to know what some of these parameters are. Claudio and I concluded that this comparison can be done in two ways. The PVALID Chunk requires the SCTP stack to determine all options it received in the INIT based on its implementation capabilities and mark those down. Then when it receives the PVALID chunk it compared all it could understand, with all that is offered. If anything was offered that the responder implements but didn\u2019t mark as parsed from the INIT we have a potential modification and should abort. Doing this from the user land level generates certain API requirements. It basically means that in a step after (4) the responder key-management side should read up the SCTP stacks interpretation of what was offered in the INIT. It also needs and API function that gives the corresponding list of all that is implemented in this stack. We see moving this information across the SCTP stack boundary up to the key-management as non-trivial and requires generating an information structure that represents all relevant security parameter combinations. \n\nClaudio have an alternative idea that appears to both of us to result in simpler implementation assuming that PVALID remains a chunk. The core of this idea is to have the implementations perform only a byte comparison between what it received in the INIT/INIT-ACK and what is contained in the PVALID Chunk. We think only the Parameters needs to be compared. So the PVALID chunk will contain a full binary representation of the INIT or INIT-ACK parameters depending on direction. That way both sides simply save what it sent, and later sends it in the PVALID Chunk. As this binary byte object is not interpreted, only stored as part of the SCTP association state doing the validation within the SCTP level is simple and straight forward and avoids the need for additional API calls. \n \nThe only potential downside with this is that this will grow the handshake messages, especially the INIT-ACK as that message needs to contain both the parameter response in clear text, as well as both the received parameters from the INIT as well as its response but protected inside the encrypted Cookie. Thus, the INIT-ACK will contain three sets of parameters.\n \nThe design team will discuss this further.",
          "createdAt": "2025-06-12T13:37:17Z",
          "updatedAt": "2025-06-12T13:37:17Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Design team discussed this. We will encoded all security option in the DTLS Chunk Parameter. Each option is given a value and listed in a priority list. @gloinul will write parameter and IANA table. @tuexen to specify API for it.\n\nWe plan to send the PVALID messages over seperate PPID. ",
          "createdAt": "2025-06-13T08:37:51Z",
          "updatedAt": "2025-06-13T08:37:51Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "@tuexen to write api and interaction with statemachine to go from SCTP ESTABLISHED to PROTECTED including PVALID message exchange. ",
          "createdAt": "2025-06-13T08:44:10Z",
          "updatedAt": "2025-06-13T08:44:10Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOKszxDc64MWEq",
      "title": "DT : Removal of DCI",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/23",
      "state": "CLOSED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From the Design Team : it has been decided to remove the use of DCI from DTLS Chunk header.",
      "createdAt": "2025-05-26T07:03:39Z",
      "updatedAt": "2025-06-05T06:32:13Z",
      "closedAt": "2025-06-05T06:32:13Z",
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOKszxDc64Me6V",
      "title": "DT : Encrypt the INIT Chunk at restart",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/24",
      "state": "CLOSED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From the Design Team : it has been decided that the whole handshake during an SCTP Restart shall be sent using DTLS Chunk, including also INIT/INIT-ACK, encrypted with the Keys previously reserved for SCTP Restart purpose. Those Keys will be derived from the existing DTLS context, removing the need for handshaking a second DTLS context.",
      "createdAt": "2025-05-26T07:23:00Z",
      "updatedAt": "2025-06-05T06:32:13Z",
      "closedAt": "2025-06-05T06:32:13Z",
      "comments": []
    },
    {
      "number": 25,
      "id": "I_kwDOKszxDc64Pj8z",
      "title": "DT : Options in DTLS1.3 Parameter",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/25",
      "state": "CLOSED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "gloinul"
      ],
      "labels": [],
      "body": "From the Design Team : DTLS1.3 Parameter in INIT/INIT-ACK Chunk requires supporting options, such as the key management, for instance.",
      "createdAt": "2025-05-26T12:42:13Z",
      "updatedAt": "2025-06-17T11:58:43Z",
      "closedAt": "2025-06-17T11:58:43Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "New parameter values have been implemented in PR #31. ",
          "createdAt": "2025-06-17T11:58:43Z",
          "updatedAt": "2025-06-17T11:58:43Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOKszxDc65mtnA",
      "title": "When performing SCTP Association restart do one reset epoch?",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/27",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "tuexen"
      ],
      "labels": [],
      "body": "Do one reset the DTLS epoch values after an SCTP assocation restart protected by the DTLS chunk?\n\nAs the DTLS 1.3 epoch counter is 64-bit I don't think there are a real issue of running out of space and do not need to be reset for that reason. If one reset the counter, the node not restarting could potentially be forced to overwrite the current epoch. However, the SCTP association restart basically result in a new DTLS key context store, which will initially only contain the restart DTLS context ID. There should be no traffic DTLS key context, these should only be generated after a new DTLS key management invocation. \n\nIf one do not reset the counter then there will be a need to for the key-management on the restarting side to understand that the next epoch value to use is the one used by the restart +1.\n\nDo anyone see issues with reseting epoch on restart?",
      "createdAt": "2025-06-03T13:16:56Z",
      "updatedAt": "2025-06-17T11:59:53Z",
      "closedAt": "2025-06-17T11:59:53Z",
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "As both side knows the restart key used for the restart using restart +1 is actually fine, and might have less overlap issues compared to being on the first epoch and resetting it back and then having to overwrite the restart key used, after having installed the traffic key. In some particular situation we might end up overwriting an existing key in cases if the restart happens in the exact moment the negotiation when the non restarting have managed to install the next key, but not the crashing side. ",
          "createdAt": "2025-06-05T13:09:32Z",
          "updatedAt": "2025-06-05T13:09:32Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Design Team discussion: Assumption will reset it to value=3 after restart. The API needs to take into account that full epoch resets from higher value to a lower. ",
          "createdAt": "2025-06-13T08:57:39Z",
          "updatedAt": "2025-06-13T08:57:39Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Write down API consideration of this. ",
          "createdAt": "2025-06-13T08:58:21Z",
          "updatedAt": "2025-06-13T08:58:21Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Reseting the Epoch has now been implemented by #31 ",
          "createdAt": "2025-06-17T11:59:53Z",
          "updatedAt": "2025-06-17T11:59:53Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOKszxDc6508cU",
      "title": "Should DTLS Chunk update ASCONF (RFC 5061) to not use SCTP-AUTH",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/28",
      "state": "OPEN",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "gloinul"
      ],
      "labels": [],
      "body": "Currently RFC 5061 require that one uses SCTP-AUTH. The draft is currently proposing that ASCONF RFC could be updated to allow using DTLS chunk if in use instead of SCTP-AUTH. \n\nIf agreeable a new section stating the changes to the RFC 5061 one text should be added. ",
      "createdAt": "2025-06-04T12:29:04Z",
      "updatedAt": "2025-06-13T09:34:07Z",
      "closedAt": null,
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Current comment on this is in https://gloinul.github.io/draft-westerlund-tsvwg-sctp-dtls-chunk/draft-westerlund-tsvwg-sctp-dtls-chunk.html#name-dynamic-address-reconfigura",
          "createdAt": "2025-06-04T12:30:53Z",
          "updatedAt": "2025-06-04T12:30:53Z"
        },
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "Discussion: ACONF from new address when encapsulated will not work. Using it encapsulated when just signalling a new address over an existing one will work. Explain this limitation. ",
          "createdAt": "2025-06-13T09:34:07Z",
          "updatedAt": "2025-06-13T09:34:07Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOKszxDc651f_I",
      "title": "Update Initilization procedure and state machine.",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/29",
      "state": "OPEN",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "tuexen"
      ],
      "labels": [],
      "body": "The description of how the DTLS chunk initilization was agreed to be generalized and thus the interaction with the API functions needs to be updated.\n\nReception Key set: Can receive DTLS chunk from peer will also accept unprotected. \nSend Key set: Will send SCTP packets protected, but still accepts unprotected.\nProtection Established: Protection sending and reception verified, only protected packets established. \n\nThis will interact with the exchange of user level validation data that can only be sent after Send Key Set. Likely this will need to be addressed in combination with #22 update. ",
      "createdAt": "2025-06-04T13:17:24Z",
      "updatedAt": "2025-06-13T08:58:48Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 30,
      "id": "I_kwDOKszxDc67yEGw",
      "title": "Define a new PPID used for PVALID message",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/30",
      "state": "CLOSED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [
        "gloinul"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-16T15:40:34Z",
      "updatedAt": "2025-06-19T13:05:36Z",
      "closedAt": "2025-06-19T13:05:36Z",
      "comments": []
    },
    {
      "number": 32,
      "id": "I_kwDOKszxDc68U8VW",
      "title": "DTLS 1.3 Chunk Protected Association responder including all its supported or just the common subset?",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/32",
      "state": "OPEN",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "So the initiator of an SCTP Association will inlclude all its Protection Solutions in preference order in its DTLS 1.3 Chunk Protected Association parameter. However, when the responder sends the INIT-ACK and include the parameter should the parameter include:\n\na) All Protection solutions it supports, and have the initiator pick the most preferred in this answer that it supports. Thus enabling the initiator to learn the full capability of the peer. Thus it potentially two disjunct sets could be exchanged.\nb) Only the subset of Protection solutions the responding node support, whit the first being the selected solution.\n\n",
      "createdAt": "2025-06-19T09:20:52Z",
      "updatedAt": "2025-06-19T09:20:52Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 34,
      "id": "I_kwDOKszxDc68gGNY",
      "title": "Motivation of SCTP restart",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/issues/34",
      "state": "OPEN",
      "author": "tuexen",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Motivation unclear\n- How can the restart key be stored in a secure way\n- Mandatory to implement\n- What happens if not implemented\n\nThis is to be discussed at the next VC.",
      "createdAt": "2025-06-20T09:22:01Z",
      "updatedAt": "2025-06-20T09:22:01Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOKszxDc5gO-Y_",
      "title": "Update draft-westerlund-tsvwg-sctp-dtls-chunk.md",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/1",
      "state": "MERGED",
      "author": "emanjon",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-11-23T14:10:51Z",
      "updatedAt": "2023-11-23T14:18:05Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "4cd2ae0e339297e1da5bd88e2a7c2e21ecbff0b7",
      "headRepository": "emanjon/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "patch-1",
      "headRefOid": "c4722a02812f98ea4e5700d12f1b8cfd69054151",
      "closedAt": "2023-11-23T14:18:01Z",
      "mergedAt": "2023-11-23T14:18:01Z",
      "mergedBy": "emanjon",
      "mergeCommit": {
        "oid": "07c2c4470cb142a1834d35066c214f272ddf7e08"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc5oGkQ-",
          "commit": {
            "abbreviatedOid": "c4722a0"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Did we add an authentication tag?",
          "createdAt": "2023-11-23T14:14:26Z",
          "updatedAt": "2023-11-23T14:14:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOKszxDc5jlCe0",
      "title": "SCTP Restart handling that is secure and efficient using dedicated restart DTLS connection",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/4",
      "state": "MERGED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Also contains some other editorial fixes. ",
      "createdAt": "2024-01-09T13:36:24Z",
      "updatedAt": "2024-01-10T15:19:56Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "cba1d0abad19c0b30bb817459b5b2ceac11640d5",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "statemachine",
      "headRefOid": "fe43760acd04d213107f1bdb90696bbfd1e114da",
      "closedAt": "2024-01-10T15:17:40Z",
      "mergedAt": "2024-01-10T15:17:40Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "7f1053654b066545df297270c8b23ad8a9dd5877"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc5r9Hce",
          "commit": {
            "abbreviatedOid": "894a882"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-09T13:47:18Z",
          "updatedAt": "2024-01-09T13:47:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc5r9ICg",
          "commit": {
            "abbreviatedOid": "894a882"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-09T13:48:43Z",
          "updatedAt": "2024-01-09T13:48:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOKszxDc56oYxQ",
      "title": "Issue #10 - described the downgrade towards rfc6083",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/13",
      "state": "MERGED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-06T07:46:55Z",
      "updatedAt": "2024-10-04T07:39:50Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "1057dc3016cef4e8e9b8aa86301e7799a4824879",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "issue10",
      "headRefOid": "67c86ebfdfff62d882c306b27d7dcdbf26e8f55f",
      "closedAt": "2024-10-04T07:39:50Z",
      "mergedAt": "2024-10-04T07:39:50Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "e8afaaf081da54697cce258a06d2891a9ae7099d"
      },
      "comments": [
        {
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "body": "This PR now also fixes #12.",
          "createdAt": "2024-09-06T12:30:24Z",
          "updatedAt": "2024-09-06T12:30:24Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6L6coq",
          "commit": {
            "abbreviatedOid": "67c86eb"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T07:39:34Z",
          "updatedAt": "2024-10-04T07:39:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOKszxDc56oY5K",
      "title": "Issue11",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/14",
      "state": "MERGED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-06T07:47:15Z",
      "updatedAt": "2024-10-04T07:42:45Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "1057dc3016cef4e8e9b8aa86301e7799a4824879",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "issue11",
      "headRefOid": "28a9a4864dc9db87a27d706f6ccec096f298f196",
      "closedAt": "2024-10-04T07:42:44Z",
      "mergedAt": "2024-10-04T07:42:44Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "a56ea81a57c93889937796785ee5031192f12188"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6IeI3x",
          "commit": {
            "abbreviatedOid": "58ce6c8"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "I also think there are missing text to make clearify better that when PROTECTED state is entered the endpoint MUST NOT accept plain text chunks. ",
          "createdAt": "2024-09-09T11:14:41Z",
          "updatedAt": "2024-09-09T11:17:28Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "SHALL",
              "createdAt": "2024-09-09T11:14:41Z",
              "updatedAt": "2024-09-09T11:17:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6L6eDF",
          "commit": {
            "abbreviatedOid": "28a9a48"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T07:42:37Z",
          "updatedAt": "2024-10-04T07:42:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOKszxDc57JEWn",
      "title": "Introduced the changes due to issue #7",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/15",
      "state": "MERGED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-11T10:35:23Z",
      "updatedAt": "2024-10-04T07:46:57Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "1057dc3016cef4e8e9b8aa86301e7799a4824879",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "issue7",
      "headRefOid": "aab1ce30e98d4e2eab50f9e5ca756d42a6846b7f",
      "closedAt": "2024-10-04T07:46:57Z",
      "mergedAt": "2024-10-04T07:46:57Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "4f0cdf391731faec50112afa09f668d2eeb151e5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6L6f7w",
          "commit": {
            "abbreviatedOid": "aab1ce3"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-04T07:46:43Z",
          "updatedAt": "2024-10-04T07:46:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOKszxDc5-Lq_Y",
      "title": "API AEAD limit considerations",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/16",
      "state": "MERGED",
      "author": "emanjon",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "#8",
      "createdAt": "2024-10-10T08:17:02Z",
      "updatedAt": "2024-10-10T08:31:21Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "8e1d5cdb58532c2f1840ec3f8461b9c32c0ba427",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "API-AEAD-limit-considerations",
      "headRefOid": "39d0cf96b7975a7457378ab94663ab0ae6c1fafb",
      "closedAt": "2024-10-10T08:31:21Z",
      "mergedAt": "2024-10-10T08:31:21Z",
      "mergedBy": "emanjon",
      "mergeCommit": {
        "oid": "4522cae6e59e25db4d980aa5135c7a4199e940c4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6MoqzE",
          "commit": {
            "abbreviatedOid": "39d0cf9"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-10T08:20:11Z",
          "updatedAt": "2024-10-10T08:20:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOKszxDc5-L_tz",
      "title": "Privacy Considerations",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/17",
      "state": "MERGED",
      "author": "emanjon",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "#9",
      "createdAt": "2024-10-10T08:55:00Z",
      "updatedAt": "2024-10-10T09:03:58Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "4522cae6e59e25db4d980aa5135c7a4199e940c4",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "Privacy-Considerations",
      "headRefOid": "010ac9cfe25ccf4fe65c8725322fa43910efd395",
      "closedAt": "2024-10-10T09:03:58Z",
      "mergedAt": "2024-10-10T09:03:58Z",
      "mergedBy": "emanjon",
      "mergeCommit": {
        "oid": "4ef02a6dbb55f1354cdf30727fd91095afa35845"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6MpCB6",
          "commit": {
            "abbreviatedOid": "010ac9c"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-10T08:58:00Z",
          "updatedAt": "2024-10-10T08:58:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOKszxDc5_Geoz",
      "title": "Various edits to address inconsistencies and improve the text. ",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/18",
      "state": "MERGED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-18T12:59:27Z",
      "updatedAt": "2024-10-21T12:21:50Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "4ef02a6dbb55f1354cdf30727fd91095afa35845",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "mw-edits",
      "headRefOid": "b5d5f368282126839f9e4aae75687d7930c1c727",
      "closedAt": "2024-10-21T12:21:45Z",
      "mergedAt": "2024-10-21T12:21:45Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "ca13c0c5784452f7eeaa3e333c963c74aeae3d83"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6Nvon4",
          "commit": {
            "abbreviatedOid": "1d33b3e"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T13:26:12Z",
          "updatedAt": "2024-10-18T13:26:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6Nvowm",
          "commit": {
            "abbreviatedOid": "1d33b3e"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T13:26:26Z",
          "updatedAt": "2024-10-18T13:26:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6NvpY6",
          "commit": {
            "abbreviatedOid": "1d33b3e"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T13:27:34Z",
          "updatedAt": "2024-10-18T13:27:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6Nvpw4",
          "commit": {
            "abbreviatedOid": "1d33b3e"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Shouldn't be \"finally\"?",
          "createdAt": "2024-10-18T13:28:12Z",
          "updatedAt": "2024-10-18T13:28:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6NvqxN",
          "commit": {
            "abbreviatedOid": "1d33b3e"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Line 985 : PROTECTION INITILIZATION is PROTECTION INITIALIZATION",
          "createdAt": "2024-10-18T13:29:55Z",
          "updatedAt": "2024-10-18T13:29:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6NvtuH",
          "commit": {
            "abbreviatedOid": "b5d5f36"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T13:35:08Z",
          "updatedAt": "2024-10-18T13:35:08Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6N-MFp",
          "commit": {
            "abbreviatedOid": "b5d5f36"
          },
          "author": "emanjon",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T12:20:48Z",
          "updatedAt": "2024-10-21T12:20:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOKszxDc6NIXq7",
      "title": "Added a limit to PVALID of no more than 32 four\u2026",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/20",
      "state": "MERGED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "\u2026-byte words, i.e. a maximum of 1024 possible solutions can be indicated. This addresses issue #19 ",
      "createdAt": "2025-03-03T10:37:33Z",
      "updatedAt": "2025-03-03T16:35:27Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "911576c0af0920a516e9cf8bbf6cf628431bb621",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "gloinul-issue-19",
      "headRefOid": "2eed1415393773413aa9a1046fb0d17064ce8d78",
      "closedAt": "2025-03-03T16:35:27Z",
      "mergedAt": "2025-03-03T16:35:26Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "4ec80f96b00b8c7e43e1bcac049dce09ba0af5c2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6eLbpe",
          "commit": {
            "abbreviatedOid": "2eed141"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T11:03:20Z",
          "updatedAt": "2025-03-03T11:03:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOKszxDc6NJzAV",
      "title": "Describing implementation challenges with key related state between chunk and handshake protection operations. ",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/21",
      "state": "MERGED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T13:28:41Z",
      "updatedAt": "2025-03-03T16:35:12Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "911576c0af0920a516e9cf8bbf6cf628431bb621",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "mw-edits-122",
      "headRefOid": "a7811649e8ee08e0152d7992558a42143eb6c408",
      "closedAt": "2025-03-03T16:35:12Z",
      "mergedAt": "2025-03-03T16:35:12Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "f12cf2ccbe2bec2bce6c4685e2c48edf5ac7085b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6eM8nB",
          "commit": {
            "abbreviatedOid": "cf41308"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "There are a few typos:\r\nLine 1350 : primiarily --> primarily \r\n1351 : reside --> resides\r\n1356 : include --> includes\r\n1364 : are very few --> is very limited\r\n1365 : \"the when\" --> when\r\n ",
          "createdAt": "2025-03-03T13:54:34Z",
          "updatedAt": "2025-03-03T13:54:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDOKszxDc6Xt1Ez",
      "title": "Removal of DCI and updated related restart identification ",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/26",
      "state": "MERGED",
      "author": "teiclap",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolves #23 and #24.\r\n\r\nRemoved DCI and fixed the relevant side effects.",
      "createdAt": "2025-05-27T05:58:12Z",
      "updatedAt": "2025-06-05T06:32:12Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "cd4c99c0484ec898361bf880b430165a2516633e",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "issue_23",
      "headRefOid": "d9d1bc9b593360394d9bfdc59aec61740105f7da",
      "closedAt": "2025-06-05T06:32:12Z",
      "mergedAt": "2025-06-05T06:32:12Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "49a4260bbffd15bb85b7f59e739aed830c183181"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6rGx8w",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-05-27T11:24:13Z",
          "updatedAt": "2025-05-27T11:54:18Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I think this should be done, but is related to association restart. ",
              "createdAt": "2025-05-27T11:24:13Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 30,
              "body": "Potential grammatical issue \"those connection\". However, I think we need to agree on a term for what a key + plus rest of context should be called. It is not a full DTLS connection. DTLS key context? A DTLS Key Context is the state related to a specific set of keys, the replay window, next DTLS sequence number, and its identifying values: Restart bit, DTLS connection ID (If used), and epoch. ",
              "createdAt": "2025-05-27T11:28:33Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 30,
              "body": "Note, I think the definition I write above should be added elsewhere and used here instead of connection. ",
              "createdAt": "2025-05-27T11:29:04Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 59,
              "body": "I think instead of using /, list all chunk types in a comma separated list. Also rewrite using \"restart DTLS key context\". ",
              "createdAt": "2025-05-27T11:34:17Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 62,
              "body": "I think you need to expand this to say: A DTLS Chunk using the restart DTLS key context is identified ... then remove the tail end \"in the DTLS chunk\"",
              "createdAt": "2025-05-27T11:36:51Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 80,
              "body": "I think this should use [DTLS CHUNK(INIT)] and [DTLS CHUNK(INIT-ACK)]",
              "createdAt": "2025-05-27T11:38:21Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 153,
              "body": "I don't think we should redefine the Chunk Length, even if it is the only Chunk we should ever see on this level. The sum of the chunk length fields are the valid SCTP packet length. Although one might derive this length from the IP header I wonder if it is smart to redefine the field. ",
              "createdAt": "2025-05-27T11:45:25Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 177,
              "body": "With the new derivation based solution, I think we expect the restart keys to be configured as soon as the main keys have been installed for each direction. ",
              "createdAt": "2025-05-27T11:47:09Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 177,
              "body": "So I think this happens earlier than PROTECTED state. We might need to rework the state machine transitions slightly. ",
              "createdAt": "2025-05-27T11:47:49Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            },
            {
              "originalPosition": 292,
              "body": "The API may need to be clarified that a given key are valid for the combination of (SCTP association, DTLS Connection ID (if used), epoch and restart bit). ",
              "createdAt": "2025-05-27T11:51:35Z",
              "updatedAt": "2025-05-27T11:54:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHIrt",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T11:56:53Z",
          "updatedAt": "2025-05-27T11:56:53Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "You are right, there are no connections, those are Keys",
              "createdAt": "2025-05-27T11:56:53Z",
              "updatedAt": "2025-05-27T11:56:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHLAT",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:00:17Z",
          "updatedAt": "2025-05-27T12:00:17Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I think we should use the word context, as it is not only keys, there are the replay window, latest used sequence number as well as the context identifiers. ",
              "createdAt": "2025-05-27T12:00:17Z",
              "updatedAt": "2025-05-27T12:00:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHMTF",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:02:15Z",
          "updatedAt": "2025-05-27T12:02:15Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "MT was quite peculiar on removing this. We can talk about",
              "createdAt": "2025-05-27T12:02:15Z",
              "updatedAt": "2025-05-27T12:02:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHM7B",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:03:13Z",
          "updatedAt": "2025-05-27T12:03:14Z",
          "comments": [
            {
              "originalPosition": 177,
              "body": "We have some work to do here, agree. I am not changing this for now but we know that Keys are derived at once and the state machine requires fine tuning",
              "createdAt": "2025-05-27T12:03:13Z",
              "updatedAt": "2025-05-27T12:03:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHO4E",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:06:01Z",
          "updatedAt": "2025-05-27T12:06:01Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "But isn't it context a word with a precise semantic in DTLS? I have nothing against context, as long as it makes easier reading",
              "createdAt": "2025-05-27T12:06:01Z",
              "updatedAt": "2025-05-27T12:06:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHblz",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:23:09Z",
          "updatedAt": "2025-05-27T12:23:10Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "I think we have to ask him, I don't remember him talking about redefining the chunk length field. He tried to optimize things. The length field in the DTLS record is optional, and should never be needed when using DTLS chunk as the DTLS chunk length field exists. There is a clear downside I think to make the DTLS chunk field not match the standard definition. Any firewall that sees a length field that is zero while the actual length is non-zero will react to the packet being errnous and might discard it. ",
              "createdAt": "2025-05-27T12:23:09Z",
              "updatedAt": "2025-05-27T12:23:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHlLI",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:35:07Z",
          "updatedAt": "2025-05-27T12:35:08Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Regarding the DTLS 1.3 specification. The word context is used only three times, where one is part of a reference. So I think it is fine to define \"DTLS Key Context\" having the meaning we want it to have here to use the DTLS record like in a DTLS connection.\r\n",
              "createdAt": "2025-05-27T12:35:07Z",
              "updatedAt": "2025-05-27T12:35:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHoIk",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:37:21Z",
          "updatedAt": "2025-05-27T12:37:21Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "This is a good point.",
              "createdAt": "2025-05-27T12:37:21Z",
              "updatedAt": "2025-05-27T12:37:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHoo-",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:37:37Z",
          "updatedAt": "2025-05-27T12:37:38Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "I am restoring the length",
              "createdAt": "2025-05-27T12:37:37Z",
              "updatedAt": "2025-05-27T12:37:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6rHqTn",
          "commit": {
            "abbreviatedOid": "f44393b"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T12:39:10Z",
          "updatedAt": "2025-05-27T12:39:10Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Then let's have it added in the definition.\r\nDTLS Key Context is the set of data defining a Key and it's applicability, such as epoch, sequence number etc.",
              "createdAt": "2025-05-27T12:39:10Z",
              "updatedAt": "2025-05-27T12:39:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKszxDc6sy7bW",
          "commit": {
            "abbreviatedOid": "d9d1bc9"
          },
          "author": "gloinul",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-06-05T06:31:53Z",
          "updatedAt": "2025-06-05T06:31:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOKszxDc6aviLn",
      "title": "Change PVALID to message update parameter to use Protection Solution Identifiers.",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/31",
      "state": "MERGED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Resolves issue #22\r\nResolves issue #25 \r\nPartially implemented #27 ",
      "createdAt": "2025-06-16T15:43:58Z",
      "updatedAt": "2025-06-17T11:57:55Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "49a4260bbffd15bb85b7f59e739aed830c183181",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "issue22",
      "headRefOid": "adbadb4768b93ed176cf7a7095f871342f9d3d3e",
      "closedAt": "2025-06-17T11:57:54Z",
      "mergedAt": "2025-06-17T11:57:54Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "10527cd9e37fad30fce9b6e07764a24ecd8519f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6u5dhh",
          "commit": {
            "abbreviatedOid": "09c7bc8"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Line 396 to 398 :The SCTP Restart handshakes INIT, INIT-ACK, COOCKIE-ECHO, COOKIE-ACK\r\nexactly as in legacy SCTP Restart case; these Chunks SHALL be\r\nsent as DTLS chunk protected using the restart DTLS key context.\r\n\r\nLine 402\r\n{{sctp-DTLS-chunk-newchunk-crypt-struct}}).  There's exactly one\r\nactive Restart Key at a time, the newest. However, a crash at the\r\npoint having completed the key-management exchange but failing to\r\nshould be:\r\n{{sctp-DTLS-chunk-newchunk-crypt-struct}}).  There's exactly one\r\nactive Restart DTLS Context at a time, the newest. However, a crash at the\r\npoint having completed the key-management exchange but failing to\r\n\r\nLine 405 \r\ncommit the key material to secure storage could result in lost of the\r\nlatest key. Therefore, the endpoints SHOULD retain the old restart\r\nshould be\r\ncommit the DTLS Key Context to secure storage could result in lost of the\r\nlatest DTLS Key Context . Therefore, the endpoints SHOULD retain the old restart\r\n\r\nLine 423 \r\nA restarted SCTP Association SHALL continue to use the Restart Key,\r\nfor User Traffic until a new traffic DTLS Key will be available.  The\r\nshould be\r\nA restarted SCTP Association SHALL continue to use the Restart DTLS Key Context,\r\nfor User Traffic until a new traffic DTLS Key Context will be available.  The\r\n\r\nLine 493\r\nRestart Key is available is kept to a minimum. Note that another\r\nshould be\r\nRestart DTLS Key Context is available is kept to a minimum. Note that another\r\n\r\nLine 448\r\nvalid packets. After having derived new traffic keys the endpoint\r\ninstalls the traffic key first, and start using it.  The new restart\r\nkey is only installed after any old in-flight restart packets have had\r\na chance to be received.\r\nshould be\r\nvalid packets. After having derived new traffic keys the endpoint\r\ninstalls the Traffic DTLS Key Context first, and start using it.  The new restart\r\nDTLS Key Context is only installed after any old in-flight restart packets have had\r\na chance to be received.\r\n\r\nLine 501 : shouldn't at least one Protection Solution exist?\r\n\r\nLine 629 : rather than set, I think we should use \"sequence\"\r\n\r\nLine 839 : aren't we setting a DTLS Key Context rather than individual keys? \r\n\r\nLine 852: \r\nparameter is sent in the INIT-ACK, otherwise it will reply with an\r\nshould be\r\nparameter sent in the INIT-ACK, otherwise it will reply with an\r\n\r\nLine 1397\r\nSolutions\". This regsitry is part of the of the Stream\r\nshould be\r\nSolutions\". This registry is part of the of the Stream\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2025-06-17T06:31:18Z",
          "updatedAt": "2025-06-17T06:31:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKszxDc6u5pHH",
          "commit": {
            "abbreviatedOid": "09c7bc8"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Line 476:\r\n  plus 4 and if N is odd plus 2 bytes of padding.\r\nshould be\r\n  plus 4 and, if N is odd, plus 2 bytes of padding.\r\n\r\nLine 487 and 682\r\nPadding: If the number of included Protection solutions are odd the\r\nshould be\r\nPadding: If the number of included Protection solutions is odd the\r\n\r\n",
          "createdAt": "2025-06-17T06:47:58Z",
          "updatedAt": "2025-06-17T06:47:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOKszxDc6bQbG7",
      "title": "Adding PPID for PVALID, some other fixes related to PVALID.",
      "url": "https://github.com/gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk/pull/33",
      "state": "MERGED",
      "author": "gloinul",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "resolves #30. ",
      "createdAt": "2025-06-19T13:03:31Z",
      "updatedAt": "2025-06-19T13:14:40Z",
      "baseRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "baseRefName": "main",
      "baseRefOid": "10527cd9e37fad30fce9b6e07764a24ecd8519f1",
      "headRepository": "gloinul/draft-westerlund-tsvwg-sctp-dtls-chunk",
      "headRefName": "pvalid-pip",
      "headRefOid": "ae0b5b719e2c7a8c3731c320e5205883f1628761",
      "closedAt": "2025-06-19T13:05:35Z",
      "mergedAt": "2025-06-19T13:05:35Z",
      "mergedBy": "gloinul",
      "mergeCommit": {
        "oid": "3873b4ed51d70c3737f23212c6a5c373dcc30541"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKszxDc6vamAb",
          "commit": {
            "abbreviatedOid": "ae0b5b7"
          },
          "author": "teiclap",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Made some spelling changes",
          "createdAt": "2025-06-19T13:14:40Z",
          "updatedAt": "2025-06-19T13:14:40Z",
          "comments": []
        }
      ]
    }
  ]
}